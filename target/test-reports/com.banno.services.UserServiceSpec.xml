<?xml version='1.0' encoding='UTF-8'?>
<testsuite hostname="samue-dry-mac.local" name="com.banno.services.UserServiceSpec" tests="17" errors="0" failures="0" skipped="0" time="2.807">
                     <properties>
      <property name="awt.toolkit" value="sun.lwawt.macosx.LWCToolkit"/><property name="java.specification.version" value="10"/><property name="sun.cpu.isalist" value=""/><property name="sun.jnu.encoding" value="UTF-8"/><property name="sun.arch.data.model" value="64"/><property name="java.vendor.url" value="http://java.oracle.com/"/><property name="sun.boot.library.path" value="/Library/Java/JavaVirtualMachines/jdk-10.0.1.jdk/Contents/Home/lib"/><property name="sun.java.command" value="/usr/local/Cellar/sbt/1.1.4/libexec/bin/sbt-launch.jar test"/><property name="jdk.debug" value="release"/><property name="java.specification.vendor" value="Oracle Corporation"/><property name="java.version.date" value="2018-04-17"/><property name="java.home" value="/Library/Java/JavaVirtualMachines/jdk-10.0.1.jdk/Contents/Home"/><property name="file.separator" value="/"/><property name="java.vm.compressedOopsMode" value="Zero based"/><property name="line.separator" value="
"/><property name="java.specification.name" value="Java Platform API Specification"/><property name="java.vm.specification.vendor" value="Oracle Corporation"/><property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/><property name="java.runtime.version" value="10.0.1+10"/><property name="user.name" value="sdrysdale"/><property name="file.encoding" value="UTF-8"/><property name="jnidispatch.path" value="/var/folders/nq/l2lkxjns2z3__r4gq0v24mt40000gn/T/jna--1841846191/jna14615563467407625627.tmp"/><property name="java.vendor.version" value="18.3"/><property name="jna.loaded" value="true"/><property name="java.io.tmpdir" value="/var/folders/nq/l2lkxjns2z3__r4gq0v24mt40000gn/T/"/><property name="java.version" value="10.0.1"/><property name="java.vm.specification.name" value="Java Virtual Machine Specification"/><property name="java.awt.printerjob" value="sun.lwawt.macosx.CPrinterJob"/><property name="sun.os.patch.level" value="unknown"/><property name="java.library.path" value="/Users/sdrysdale/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/><property name="java.vendor" value="Oracle Corporation"/><property name="scala.ext.dirs" value="/Users/sdrysdale/.sbt/0.13/java9-rt-ext-oracle_corporation_10_0_1"/><property name="sun.io.unicode.encoding" value="UnicodeBig"/><property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/><property name="gopherProxySet" value="false"/><property name="file.encoding.pkg" value="sun.io"/><property name="java.class.path" value="/usr/local/Cellar/sbt/1.1.4/libexec/bin/sbt-launch.jar"/><property name="java.vm.vendor" value="&quot;Oracle Corporation&quot;"/><property name="jline.shutdownhook" value="false"/><property name="user.timezone" value="America/Chicago"/><property name="os.name" value="Mac OS X"/><property name="java.vm.specification.version" value="10"/><property name="sun.java.launcher" value="SUN_STANDARD"/><property name="user.country" value="US"/><property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/><property name="sun.cpu.endian" value="little"/><property name="user.home" value="/Users/sdrysdale"/><property name="user.language" value="en"/><property name="java.awt.graphicsenv" value="sun.awt.CGraphicsEnvironment"/><property name="jline.esc.timeout" value="0"/><property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/><property name="path.separator" value=":"/><property name="os.version" value="10.12.6"/><property name="jna.nosys" value="true"/><property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/><property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/><property name="jna.platform.library.path" value="/usr/lib:/usr/lib"/><property name="java.vendor.url.bug" value="http://bugreport.java.com/bugreport/"/><property name="user.dir" value="/Users/sdrysdale/scala-bootcamp/milestone-project"/><property name="os.arch" value="x86_64"/><property name="java.vm.info" value="mixed mode"/><property name="java.vm.version" value="10.0.1+10"/><property name="java.class.version" value="54.0"/>
    </properties>
                     <testcase classname="com.banno.services.UserServiceSpec" name="When trying to get a list of all dbUsers getAll should::return a list of type dbUser" time="2.047">
                                                 
                                               </testcase><testcase classname="com.banno.services.UserServiceSpec" name="When trying to get a list of all dbUsers getAll should::return a list of dbUser" time="0.075">
                                                 
                                               </testcase><testcase classname="com.banno.services.UserServiceSpec" name="When we try to get a user that does exist get should::return some dbUser" time="0.072">
                                                 
                                               </testcase><testcase classname="com.banno.services.UserServiceSpec" name="When we try to get an invalid user get should::return None" time="0.017">
                                                 
                                               </testcase><testcase classname="com.banno.services.UserServiceSpec" name="When we try to create an account with a username that already exists create should::return None" time="0.054">
                                                 
                                               </testcase><testcase classname="com.banno.services.UserServiceSpec" name="When we try to create an account with a username that isn't taken create should::return the username of the created user" time="0.088">
                                                 
                                               </testcase><testcase classname="com.banno.services.UserServiceSpec" name="when trying to change a password of a valid user changePassword should::return a Future of Some String" time="0.036">
                                                 
                                               </testcase><testcase classname="com.banno.services.UserServiceSpec" name="when trying to change a password of an invalid user changePassword should::return a Future of None" time="0.014">
                                                 
                                               </testcase><testcase classname="com.banno.services.UserServiceSpec" name="When passing in valid UserCred and a term to add addToSearchTerm should::return a Future of Some String" time="0.035">
                                                 
                                               </testcase><testcase classname="com.banno.services.UserServiceSpec" name="When passing in an invalid UserCred addToSearchTerm should::return None" time="0.016">
                                                 
                                               </testcase><testcase classname="com.banno.services.UserServiceSpec" name="When passing in a valid UserCred verifyUser should::return true" time="0.017">
                                                 
                                               </testcase><testcase classname="com.banno.services.UserServiceSpec" name="When passing in a user with a valid username and invalid password verifyUser should::return false" time="0.015">
                                                 
                                               </testcase><testcase classname="com.banno.services.UserServiceSpec" name="When passing in a user with an invalid username verifyUser should::return false" time="0.017">
                                                 
                                               </testcase><testcase classname="com.banno.services.UserServiceSpec" name="when we have a user and we call findMostFrequent it should::find the most frequent search" time="0.07">
                                                 
                                               </testcase><testcase classname="com.banno.services.UserServiceSpec" name="when we have a user that has a tie for the most frequent search findMostFrequent should::return dogs" time="0.083">
                                                 
                                               </testcase><testcase classname="com.banno.services.UserServiceSpec" name="when we have a user that hasn't searched for anything findMostFrequent should::return null" time="0.056">
                                                 
                                               </testcase><testcase classname="com.banno.services.UserServiceSpec" name="when we have a list of users allMostFrequentSearch should::return some list of string" time="0.095">
                                                 
                                               </testcase>
                     <system-out><![CDATA[]]></system-out>
                     <system-err><![CDATA[]]></system-err>
                   </testsuite>